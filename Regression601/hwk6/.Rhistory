?lm.ridge
head(dd)
designX<- cbind(1,dd[-1])
fitted(m1)
fit<- designX %*% coef(m1)
designX<- cbind(1,dd[-1])
fit<- designX %*% coef(m1)
dim(designX)
dim(coef(m1))
coef(m1)
class(designX)
designX<- as.matrix(cbind(1,dd[-1]))
fit<- designX %*% coef(m1)
resid(m1)
res <- fit- log(dd$PrizeMoney)
standard.res <- res/sd(res)
plot(standard.res,main = "standardized residuals")
qqnorm(standard.res,ylab=â€œstandard residual'')
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
plot(res,fit,main = "residuals vs fitted value")
plot(standard.res,main = "standardized residuals")
plot(res,fit,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(matrix(c(1,2),ncol = 2)
plot(standard.res,main = "standardized residuals")
layout(matrix(c(1,2),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(res,fit,main = "residuals vs fitted value")
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(res,fit,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
require(pls)
m_pca = pcr(log(PrizeMoney) ~ ., data = dd)
require(pls)
pca<- pcr(log(PrizeMoney) ~ ., data = dd)
summary(pca)
pca$coefficients
pca$scores
pca$terms
?pcr
summary(pca)
pca
plot(pca$scores)
pca$scores
pca<- pcr(log(PrizeMoney) ~ ., data = dd)
summary(pca)
newd <- cbind(log(dd$PrizeMoney),pca$loadings)
unclass(pca$loadings)
newd <- cbind(log(dd$PrizeMoney),unclass(pca$scores))
head(newd)
newd <- data.frame(y.log=log(dd$PrizeMoney),unclass(pca$scores))
head(newd)
plot(pca$scores)
layout(1)
plot(newd)
plot(pca)
plot(pca,which=3)
pca<- pcr(log(PrizeMoney) ~ ., data = dd)
plot(pca,which=3)
plot(pca,which=1)
plot(newd)
designX<- as.matrix(cbind(1,unclass(pca$scores)))
fit<- designX %*% coef(pca)
fit<- pca$fitted.values
res <- fit- log(dd$PrizeMoney)
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(res,fit,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
m_pls = plsr(log(PrizeMoney) ~ ., data = golf)
summary(m_pls)
m_pls_lm = lm(log(PrizeMoney) ~ m_pls$scores, golf)
summary(m_pls_lm)
layout(matrix(c(1,2,3,4),ncol = 2, byrow = TRUE))
plot(m_pls_lm)
layout(1)
plot(fit,res,main = "residuals vs fitted value")
pca$fitted.values
log(dd$PrizeMoney)
res <- log(dd$PrizeMoney) - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
pls = plsr(log(PrizeMoney) ~ ., data = golf)
pls = plsr(log(PrizeMoney) ~ ., data = dd)
summary(pls)
newd <- data.frame(y.log=log(dd$PrizeMoney),unclass(pls$scores))
plot(newd)
designX<- as.matrix(cbind(1,unclass(pls$scores)))
fit<- pls$fitted.values
res <- log(dd$PrizeMoney) - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
dd2 <- read.table("HWK6q2.txt", header = FALSE)
head(dd2)
dd2 <- read.table("HWK6q2.txt")
head(dd2)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <- c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
names(dd2)[1] <- c("Y")
head(dd2)
pairs(dd2)
full <- lm(Y~.,data = dd2)
boxCox(full, family="yjPower", plotit = TRUE)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
boxCox(full, plotit = TRUE)
boxCox(full, plotit = TRUE)
?boxCox
boxCox(full, family="bcPower", plotit = TRUE)
boxCox(full, family="yjPower", plotit = TRUE)
depvar.transformed <- yjPower(dd2$Y, 0.5)
depvar.transformed
y.transformed <- yjPower(dd2$Y, 0.5)
dd2$Y <- yjPower(dd2$Y, 0.5)
?boxCox
head
head()
head(dd2)
pairs(dd2)
pairs(dd2)
dd2 <- read.table("HWK6q2.txt")
names(dd2)[1] <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
dd2 <- read.table("HWK6q2.txt")
names(dd2)[1] <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
head(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
yjPower(dd2$Y, 0.5)
dd2$Y <- yjPower(dd2$Y, 0.5)
head(dd2)
pairs(dd2)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
plot(dd2$Y,dd2$Y <- yjPower(dd2$Y, 0.5))
str(dd2)
library(dplyr)
pairs(mutate(dd2,X6=log(X6)))
pairs(mutate(dd2,X8=sqrt(X8)))
pairs(dd2)
dd2$X8
plot(dd2$Y,dd2$X8)
plot(dd2$Y)
hist(dd2$Y)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
hist(dd2$Y)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
dd2$Y <- yjPower(dd2$Y, 0.5)
pairs(dd2)
hist(dd2$Y)
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
dd2$Y <- yjPower(dd2$Y, 0.5)
pairs(dd2)
scale(dd2)
pairs(scale(dd2))
pairs(dd2)
pairs(scale(dd2))
pairs(dd2)
pairs(scale(dd2))
pairs(scale(dd2))
pairs(dd2)
pairs(scale(dd2))
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
detach("package:dplyr", unload=TRUE)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
(m1<- lm.ridge(Y ~ ., data = dd2, lambda = 4.11))
pairs(dd2)
designX<- as.matrix(cbind(1,dd2[-1]))
fit<- designX %*% coef(m1)
res <- fit- dd2$Y
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
data_q2 = read.table("HWK6q2.txt", header = FALSE)
names(data_q2) = c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
head(data_q2)
m1_q2 = lm.ridge(Y ~ ., data = data_q2, lambda = seq(0,20,0.01))
select(m1_q2)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
pls = plsr(log(PrizeMoney) ~ ., data = dd)
summary(pls)
newd <- data.frame(y.log=log(dd$PrizeMoney),unclass(pls$scores))
plot(newd)
designX<- as.matrix(cbind(1,unclass(pls$scores)))
fit<- pls$fitted.values
res <- log(dd$PrizeMoney) - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
dd2$Y <- yjPower(dd2$Y, 0.5)
pairs(dd2)
### ridge #####
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
(m1<- lm.ridge(Y ~ ., data = dd2, lambda = 4.11))
pairs(dd2)
designX<- as.matrix(cbind(1,dd2[-1]))
fit<- designX %*% coef(m1)
res <- fit- dd2$Y
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
require(pls)
pca<- pcr(Y ~ ., data = dd2)
summary(pca)
newd <- data.frame(y=dd2$Y,unclass(pca$scores))
plot(newd)
designX<- as.matrix(cbind(1,unclass(pca$scores)))
fit<- pca$fitted.values
res <- dd2$Y - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
data_q2 = read.table("HWK6q2.txt", header = FALSE)
names(data_q2) = c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
head(data_q2)
m1_q2 = lm.ridge(Y ~ ., data = data_q2, lambda = seq(0,20,0.01))
select(m1_q2)
(m2_q2 = lm.ridge(Y ~ ., data = data_q2, lambda = 0.6))
m2_q2_matrix = as.matrix(cbind(rep(1,dim(data_q2)[1]), data_q2[,-1]))
m2_q2_fitted_value = m2_q2_matrix %*% coef(m2_q2)
m2_q2_r = m2_q2_fitted_value - data_q2$Y
m2_q2_r_sd = m2_q2_r/sd(m2_q2_r)
plot(data_q2)
layout(matrix(c(1,2), ncol = 2))
plot(m2_q2_fitted_value, m2_q2_r_sd, main = "Residuals vs Fitted", xlab = "Fitted Value", ylab = "Residuals")
qqnorm(m2_q2_r_sd, ylab = "standard residual")
qqline(m2_q2_r_sd, col = "red")
layout(1)
m_q2_pca = pcr(Y ~ ., data = data_q2)
summary(m_q2_pca)
m_q2_pcr = lm(Y ~ m_q2_pca$scores, data_q2)
summary(m_q2_pcr)
layout(matrix(c(1,2,3,4),ncol = 2, byrow = TRUE))
plot(m_q2_pcr)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
(m1<- lm.ridge(Y ~ ., data = dd2, lambda = 4.11))
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
dd2$Y <- yjPower(dd2$Y, 0.5)
pairs(dd2)
### ridge #####
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
(m1<- lm.ridge(Y ~ ., data = dd2, lambda = 2.9))
pairs(dd2)
designX<- as.matrix(cbind(1,dd2[-1]))
fit<- designX %*% coef(m1)
res <- fit- dd2$Y
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
### PCR ####
require(pls)
pca<- pcr(Y ~ ., data = dd2)
summary(pca)
newd <- data.frame(y=dd2$Y,unclass(pca$scores))
plot(newd)
designX<- as.matrix(cbind(1,unclass(pca$scores)))
fit<- pca$fitted.values
res <- dd2$Y - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
pls = plsr(Y ~ ., data = dd2)
summary(pls)
newd <- data.frame(y=dd2$Y,unclass(pls$scores))
plot(newd)
designX<- as.matrix(cbind(1,unclass(pls$scores)))
fit<- pls$fitted.values
res <- dd2$Y - fit
standard.res <- res/sd(res)
layout(matrix(c(1,2,3,3),ncol = 2))
plot(standard.res,main = "standardized residuals")
plot(fit,res,main = "residuals vs fitted value")
qqnorm(standard.res,ylab="standard residual")
qqline(standard.res)
layout(1)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
dd2 <- read.table("HWK6q2.txt")
names(dd2) <-c("Y", "X1", "X2", "X3", "X4", "X5", "X6", "X7", "X8")
pairs(dd2)
full <- lm(Y~.,data = dd2)
library(car)
boxCox(full, family="yjPower", plotit = TRUE)
dd2$Y <- yjPower(dd2$Y, 0.5)
m <- lm.ridge(Y ~ ., data = dd2, lambda = seq(0,50,0.01))
select(m)
dd3 <- read.table("ceriodaphnia.txt")
str(cerio <- with(read.table("ceriodaphnia.txt", sep=""))
str(cerio <- with(read.table("ceriodaphnia.txt", sep="")
,data.frame(numb=V1, conc=V2, strain=factor(V3))))
str(cerio <- with(read.table("ceriodaphnia.txt", sep="")
,data.frame(numb=V1, conc=V2, strain=factor(V3))))
gm <- glm(numb ~ ., family = poisson, data = cerio)
summary(gm)
plot(gm)
plot(gm, ask = FALSE)
layout(1)
plot(gm, ask = FALSE)
layout(matrix(c(1,2,3,4),ncol = 2, byrow = TRUE))
plot(gm, ask = FALSE)
layout(1)
anova(glm(numb ~ 1, family = poisson, data = cerio), gm, test = "Chisq")
summary(gm)
h0<-glm(numb ~ 1, family = poisson, data = cerio)
anova(h0, gm, test = "Chisq")
str(renewal <- with(read.table("renewal.txt", sep=""),
data.frame(renew=factor(V1, levels=1:0,labels=c("N","Y"))
,amt=V2)))
str(renewal <- with(read.table("renewal.txt", sep=""),
data.frame(renew=factor(V1, levels=1:0,labels=c("N","Y"))
,amt=V2)))
gml = glm(renew ~ ., family = binomial, data = renewal)
coef(gml)
renewal$amt
plot(jitter(renewal$amt),gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
plot(jitter(renewal$amt),gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(jitter(renewal$amt), as.numeric(renewal$renew)-1)
renewal$renew
renewal$renew-1
as.numeric(renewal$renew)
lines(renewal$amt, m_renewal$fitted.values, col = "red")
lines(renewal$amt, gml$fitted.values, col = "red")
gml$fitted.values
renewal$amt
gml$fitted.values
str(renewal)
gml <- glm(renew ~ ., family = binomial, data = renewal)
coef(gml)
points((renewal$amt), as.numeric(renewal$renew)-1)
plot((renewal$amt),gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points((renewal$amt), as.numeric(renewal$renew)-1)
xb<- as.matrix(1,renewal$amt)
xb
xb<- as.matrix(cbind(1,renewal$amt))
sb
xb
xb<- as.matrix(cbind(1,renewal$amt)) %*% coef(gml)
xb
plot(jitter(xb),gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(jitter(xb), as.numeric(renewal$renew)-1)
lines(renewal$amt, gml$fitted.values, col = "red")
lines(jitter(xb), gml$fitted.values, col = "red")
points(xbj,renewal$renew-1)
xbj<-jitter(xb)
plot(xbj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xbj,renewal$renew-1)
plot(xbj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xbj, as.numeric(renewal$renew)-1)
lines(xbj, gml$fitted.values, col = "red")
xj<-jitter(renewal$amt)
xj<-jitter(renewal$amt)
plot(xj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xj, as.numeric(renewal$renew)-1)
lines(xj, gml$fitted.values, col = "red")
?xj,gml$fitted.values
?scatterplot
scatterplot(gml$fitted.values~xj)
points(xj, as.numeric(renewal$renew)-1)
lines(xj, gml$fitted.values, col = "red")
scatterplot(gml$fitted.values~xj)
scatterplot(gml$fitted.values~xj,add=T)
scatterplot(gml$fitted.values~xj)
scatterplot(gml$fitted.values~xj,ylim = c(0,1))
points(xj, as.numeric(renewal$renew)-1)
scatterplot(gml$fitted.values~xj,ylim = c(-0.2,1))
points(xj, as.numeric(renewal$renew)-1)
lines(xj, gml$fitted.values, col = "red")
scatterplot(gml$fitted.values~xj,ylim = c(-0.2,1),span=1)
points(xj, as.numeric(renewal$renew)-1)
lines(xj, gml$fitted.values, col = "red")
lines(lowess(xj, gml$fitted.values), col = "red")
plot(xj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xj, as.numeric(renewal$renew)-1)
lines(lowess(xj, gml$fitted.values), col = "red")
plot(jitter(renewal$amt),m_renewal$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
m_renewal<-gml
plot(jitter(renewal$amt),m_renewal$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(jitter(renewal$amt), as.numeric(renewal$renew)-1)
lines(renewal$amt, m_renewal$fitted.values, col = "red")
plot(xj,m_renewal$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xj, as.numeric(renewal$renew)-1)
lines(xj, m_renewal$fitted.values, col = "red")
xj<-jitter(renewal$amt)
plot(xj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
points(xj, as.numeric(renewal$renew)-1)
lines(lowess(xj, gml$fitted.values), col = "red")
plot(xj,gml$fitted.values, ylim = c(0,1), main = "Fitted Logistic Response", xlab = "amt", ylab = "")
lines(lowess(xj, gml$fitted.values), col = "red")
# 5.bootstrap procedure for 4
points(xj, as.numeric(renewal$renew)-1)
xbnew<- c(1,40)
xbnew<- c(1,40) %*% coef(gml)
xbnew
coef(gml)[1]+coef(gml)[2]*40
exp(xbnew) / (1+exp(xbnew))
(log(0.75/(1- 0.75)) - coef(gml)[1])/coef(gml)[2]
?confint
exp(confint(gml, "amt", level = 0.9))
require(aod)
install.packages("aod")
require(aod)
?wald.test
vcov(gml)
wald.test(Sigma = vcov(gml), b = coef(gml), Term = 2)
h0 = glm(renew ~ 1, family = binomial, data = renewal)
anova(h0, gml, test = "Chisq")
Isch <- with(read.table("Ischemic.txt", sep=""),
data.frame(id=V1, cost=V2, age=V3,
gender=factor(V4, labels=c("F","M")),
int=V5, ndrug=V6, emerg=V7, compl=V8,
comorb=V9, duration=V10))
gmp <- glm(emerg ~ ., family = poisson, data = Isch)
summary(m_isch)
summary(gmp)
plot(gmp)
par(mfrow=c(2,2))
plot(gmp,ask = FALSE)
?bestglm
library(bestglm)
?bestglm
dd<-mutate(y=emerg,.data = Isch)#new y
library(bestglm)
library(dplyr)
dd<-mutate(y=emerg,.data = Isch)#new y
dd<- select(dd,-emerg)
aic<-bestglm(Xy = dd,
family = gaussian,
IC = "AIC",
method = "exhaustive")
aic$BestModel
summary(gmp)
