setwd("/Users/dcao28/WISC_R_HWK/Regression")
n=100
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
muT<-as.vector(model.matrix(~x1+x2+x3,dat) %*% betaT)
sigma<-sqrt(sigmasq)
sigmasq<-runif(n,0.5,3)
sigma<-sqrt(sigmasq)
yy<- muT+sigma*rnorm(n)
S<-10 #simulation iteration number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
head(YY)
dim(YY)
i=1
i=1
dat<-cbind(YY[,i],dat)
head(dat)
lm(dat[1]~.,data = dat  )
lm(dat[[1]]~.,data = dat  )
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
lm(dYY[,1]~.,data = dat  )
lm(YY[,1]~.,data = dat  )
lmi<-lm(YY[,i]~.,data = dat)
lmi$fitted.values
fit_lm<-lmi$fitted.values
wlmi<-lm(YY[,i]~.,data = dat,weights =1/sigmasq)
fit_wlm<-wlmi$fitted.values
wlmi<-lm(YY[,i]~.,data = dat,weights =1/sigmasq)
fit_lm<-lmi$fitted.values
fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
(fit_lm<-lmi$fitted.values)
(fit_wlm<-wlmi$fitted.values)
(coe_lm<-lmi$coefficients)
(coe_wlm<-wlmi$coefficients)
mse_lm<-sum((lmi$residuals)^2)
mse_wlm<-sum((wlmi$residuals)^2)
(mse_lm<-sum((lmi$residuals)^2))
(mse_wlm<-sum((wlmi$residuals)^2))
?lm
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights =1/sigma)
(mse_lm<-sum((lmi$residuals)^2))
(mse_wlm<-sum((wlmi$residuals)^2))
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights =1/sigmasq)
sigma
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
(fit_lm<-lmi$fitted.values)
(fit_wlm<-wlmi$fitted.values)
(coe_lm<-lmi$coefficients)
(coe_wlm<-wlmi$coefficients)
(mse_lm<-sum((lmi$residuals)^2) )
(mse_wlm<-sum((wlmi$residuals)^2) )
betaT
coe_lm
diff_beta<-c()
diff_betaW<-c()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
fit_lm<-lmi$fitted.values
fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
diff_beta<-c(diff_beta,coe_lm-betaT)
diff_betaW<-c(diff_betaW,coe_wlm-betaT)
mse_lm<-sum((lmi$residuals)^2)
mse_wlm<-sum((wlmi$residuals)^2)
}
mse_beta<-mean(diff_beta^2)
mse_betaW<-mean(diff_betaW^2)
(mse_beta<-mean(diff_beta^2))
(mse_betaW<-mean(diff_betaW^2))
sigma
dim(YY)
S<-1000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
#################
diff_beta<-c()
diff_betaW<-c()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
diff_beta<-c(diff_beta,coe_lm-betaT)
diff_betaW<-c(diff_betaW,coe_wlm-betaT)
mse_lm<-sum((lmi$residuals)^2)
mse_wlm<-sum((wlmi$residuals)^2)
}
(mse_beta<-mean(diff_beta^2))
(mse_betaW<-mean(diff_betaW^2))
a<-c(12,32,c(124))
a
a<-c(12,32,c(124,4))
a
diff_beta<-list(length=4)
diff_beta<-list(length=4)
diff_betaW<-list(length=4)
a<-list(length=4)
a[[3]]<-1
a
a[1]<-3
a
?list
a<-list()
a[[1]]<-3
a
a[[1]]<-3
a<-list()
a[1]<-3
a
diff_beta<-list()
diff_betaW<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
for(j in seq(4)){
diff_beta[[j]]<-c(diff_beta[[j]],coe_lm[j]-betaT[j])
diff_betaW[[j]]<-c(diff_betaW[[j]],coe_wlm[j]-betaT[j])
}
}
diff_beta<-list()
diff_beta[[1]]
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
}
coe_lm<-list()
coe_wlm<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm[[i]]<-lmi$coefficients
coe_wlm[[i]]<-wlmi$coefficients
}
dim(coe_lm)
coe_lm[[1]]
coe_lm[[2]]
coe_lm[[S]]
coe_lm[[S+1]]
coe_lm<-list()
coe_wlm<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm[[i]]<-lmi$coefficients-betaT
coe_wlm[[i]]<-wlmi$coefficients-betaT
}
matrix(0,nrow=S,ncol=length(betaT))
coe_lm<-matrix(0,nrow=S,ncol=length(betaT))#beta difference
coe_wlm<-matrix(0,nrow=S,ncol=length(betaT))
?lapply
lapply(matrix(0,2,2),mean)
sapply(matrix(0,2,2),mean)
sapply(matrix(0,2,2), function(x) c(mean(x),max(x)))
sapply(matrix(1:8,2,2), function(x) c(mean(x),max(x)))
matrix(1:8,2,2)
sapply(matrix(1:4,2,2), function(x) c(mean(x),max(x)))
matrix(1:4,2,2)
a<-matrix(1:4,2,2)
a<-as.data.frame(a)
a
sapply(a,function(x) c(mean(x),max(x)))
class(YY)
YY<-as.data.frame(YY)
dim(YY)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-sapply(YY, beta_diff)
dim(beta_dif)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)
rowMeans(beta_dif_wlm^2)
head(YY)
S<-10000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
YY<-as.data.frame(YY)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-sapply(YY, beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)
rowMeans(beta_dif_wlm^2)
dim(beta_dif_lm)
S
?gls
??glm
?glm
lmi<-lm(YY$V1 ~.,data = dat)
wlmi<-lm(YY$V1~.,data = dat,weights = 1/sigmasq)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta_dif<-sapply(YY, beta_diff)
sapply(beta_dif)
mapply
?mapply
?apply
class(beta_dif)
class(beta_diff)
class(beta_dif)
apply(beta_dif,var)
apply(beta_dif,2,var)
apply(beta_dif,1,var)
apply(beta_dif,1,mean)
model.matrix(~x1+x2+x3,dat)
tail(dat)
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, beta_diff)
beta_dif<-apply(YY, 2,beta_diff)
dim(beta_dif)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, 2,beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
beta<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta<-apply(YY, 2,beta)
rowMeans(beta)
beta[,1:4]
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
lm(yy~.,data=dat)
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
muT
lm(muT~.,data=dat)
lm(muT~dat$x1+dat$x2+dat$x3)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
cbind(1,dat) %*% betaT
cbind(1,dat)
x<-cbind(1,dat)
betaT
class(betaT)
x %*% betaT
x %*% t(betaT)
x
class(x)
as.matrix(x)
as.matrix(x) %*% betat
as.matrix(x) %*% betaT
Y<-as.matrix(x) %*% betaT
dat
x
class(x)
lm(Y~x$x1+x$x2+x$x3)
head(Y)
head(MUt)
head(MUt)
head(muT)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
model.matrix(~x1+x2+x3,dat)
tail(dat)
aa<-model.matrix(~x1+x2+x3,dat)
unlist(aa)
untype(aa)
attribute(aa)
attributes(aa)
model.matrix(~x1+x2+x3,dat)
model.matrix(~x1+x2+x3,dat) %*% betaT
c(1,dat[1,]) %*% betaT
dat[1,]
class(dat[1,])
as.vector(dat[1,])
c(1,as.vector(dat[1,]))
dat[1,]
1*2+dat[1,1]*1.2+dat[1,2]*(-1.4)+dat[1,3]*(-0.5)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
muT<-as.vector(model.matrix(~x1+x2+x3,dat) %*% betaT)#EY
dat
as.matrix(dat)
dat
Y<-cbind(1,as.matrix(dat)) %*% betaT
muT<-as.vector(model.matrix(~x1+x2+x3,dat) %*% betaT)#EY
head(Y)
head(muT)
lm(muT~.,data=dat)
sigmasq<-runif(n,0.5,3)#variance
sigma<-sqrt(sigmasq)
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
lm(yy~.,data=dat,weights = 1/sigmasq)
S<-10000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
lm(YY[,1]~.,data=dat,weights = 1/sigmasq)
lm(YY[,2]~.,data=dat,weights = 1/sigmasq)
beta<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta<-apply(YY, 2,beta)
rowMeans(beta)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, 2,beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
