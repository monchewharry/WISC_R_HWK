(mse_wlm<-sum((wlmi$residuals)^2) )
betaT
coe_lm
diff_beta<-c()
diff_betaW<-c()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
fit_lm<-lmi$fitted.values
fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
diff_beta<-c(diff_beta,coe_lm-betaT)
diff_betaW<-c(diff_betaW,coe_wlm-betaT)
mse_lm<-sum((lmi$residuals)^2)
mse_wlm<-sum((wlmi$residuals)^2)
}
mse_beta<-mean(diff_beta^2)
mse_betaW<-mean(diff_betaW^2)
(mse_beta<-mean(diff_beta^2))
(mse_betaW<-mean(diff_betaW^2))
sigma
dim(YY)
S<-1000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
#################
diff_beta<-c()
diff_betaW<-c()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
diff_beta<-c(diff_beta,coe_lm-betaT)
diff_betaW<-c(diff_betaW,coe_wlm-betaT)
mse_lm<-sum((lmi$residuals)^2)
mse_wlm<-sum((wlmi$residuals)^2)
}
(mse_beta<-mean(diff_beta^2))
(mse_betaW<-mean(diff_betaW^2))
a<-c(12,32,c(124))
a
a<-c(12,32,c(124,4))
a
diff_beta<-list(length=4)
diff_beta<-list(length=4)
diff_betaW<-list(length=4)
a<-list(length=4)
a[[3]]<-1
a
a[1]<-3
a
?list
a<-list()
a[[1]]<-3
a
a[[1]]<-3
a<-list()
a[1]<-3
a
diff_beta<-list()
diff_betaW<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
for(j in seq(4)){
diff_beta[[j]]<-c(diff_beta[[j]],coe_lm[j]-betaT[j])
diff_betaW[[j]]<-c(diff_betaW[[j]],coe_wlm[j]-betaT[j])
}
}
diff_beta<-list()
diff_beta[[1]]
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm<-lmi$coefficients
coe_wlm<-wlmi$coefficients
}
coe_lm<-list()
coe_wlm<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm[[i]]<-lmi$coefficients
coe_wlm[[i]]<-wlmi$coefficients
}
dim(coe_lm)
coe_lm[[1]]
coe_lm[[2]]
coe_lm[[S]]
coe_lm[[S+1]]
coe_lm<-list()
coe_wlm<-list()
for(i in seq(S)){
lmi<-lm(YY[,i]~.,data = dat)
wlmi<-lm(YY[,i]~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
coe_lm[[i]]<-lmi$coefficients-betaT
coe_wlm[[i]]<-wlmi$coefficients-betaT
}
matrix(0,nrow=S,ncol=length(betaT))
coe_lm<-matrix(0,nrow=S,ncol=length(betaT))#beta difference
coe_wlm<-matrix(0,nrow=S,ncol=length(betaT))
?lapply
lapply(matrix(0,2,2),mean)
sapply(matrix(0,2,2),mean)
sapply(matrix(0,2,2), function(x) c(mean(x),max(x)))
sapply(matrix(1:8,2,2), function(x) c(mean(x),max(x)))
matrix(1:8,2,2)
sapply(matrix(1:4,2,2), function(x) c(mean(x),max(x)))
matrix(1:4,2,2)
a<-matrix(1:4,2,2)
a<-as.data.frame(a)
a
sapply(a,function(x) c(mean(x),max(x)))
class(YY)
YY<-as.data.frame(YY)
dim(YY)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
# mse_lm<-sum((lmi$residuals)^2)
# mse_wlm<-sum((wlmi$residuals)^2)
# fit_lm<-lmi$fitted.values
# fit_wlm<-wlmi$fitted.values
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-sapply(YY, beta_diff)
dim(beta_dif)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)
rowMeans(beta_dif_wlm^2)
head(YY)
S<-10000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
YY<-as.data.frame(YY)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-sapply(YY, beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)
rowMeans(beta_dif_wlm^2)
dim(beta_dif_lm)
S
?gls
??glm
?glm
lmi<-lm(YY$V1 ~.,data = dat)
wlmi<-lm(YY$V1~.,data = dat,weights = 1/sigmasq)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta_dif<-sapply(YY, beta_diff)
sapply(beta_dif)
mapply
?mapply
?apply
class(beta_dif)
class(beta_diff)
class(beta_dif)
apply(beta_dif,var)
apply(beta_dif,2,var)
apply(beta_dif,1,var)
apply(beta_dif,1,mean)
model.matrix(~x1+x2+x3,dat)
tail(dat)
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, beta_diff)
beta_dif<-apply(YY, 2,beta_diff)
dim(beta_dif)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, 2,beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
beta<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta<-apply(YY, 2,beta)
rowMeans(beta)
beta[,1:4]
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
lm(yy~.,data=dat)
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
muT
lm(muT~.,data=dat)
lm(muT~dat$x1+dat$x2+dat$x3)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
cbind(1,dat) %*% betaT
cbind(1,dat)
x<-cbind(1,dat)
betaT
class(betaT)
x %*% betaT
x %*% t(betaT)
x
class(x)
as.matrix(x)
as.matrix(x) %*% betat
as.matrix(x) %*% betaT
Y<-as.matrix(x) %*% betaT
dat
x
class(x)
lm(Y~x$x1+x$x2+x$x3)
head(Y)
head(MUt)
head(MUt)
head(muT)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
model.matrix(~x1+x2+x3,dat)
tail(dat)
aa<-model.matrix(~x1+x2+x3,dat)
unlist(aa)
untype(aa)
attribute(aa)
attributes(aa)
model.matrix(~x1+x2+x3,dat)
model.matrix(~x1+x2+x3,dat) %*% betaT
c(1,dat[1,]) %*% betaT
dat[1,]
class(dat[1,])
as.vector(dat[1,])
c(1,as.vector(dat[1,]))
dat[1,]
1*2+dat[1,1]*1.2+dat[1,2]*(-1.4)+dat[1,3]*(-0.5)
dat<- data.frame(x1=rnorm(n,3,2),x2=rexp(n,1),x3=rgamma(n,2,3))
betaT<-c(beta0=2,beta1=1.2,beta2=-1.4,beta3=-0.5)
muT<-as.vector(model.matrix(~x1+x2+x3,dat) %*% betaT)#EY
dat
as.matrix(dat)
dat
Y<-cbind(1,as.matrix(dat)) %*% betaT
muT<-as.vector(model.matrix(~x1+x2+x3,dat) %*% betaT)#EY
head(Y)
head(muT)
lm(muT~.,data=dat)
sigmasq<-runif(n,0.5,3)#variance
sigma<-sqrt(sigmasq)
yy<- muT+sigma*rnorm(n)# ONE realization  with different variance
lm(yy~.,data=dat)
lm(yy~.,data=dat,weights = 1/sigmasq)
S<-10000 #simulation realization number
YY<- muT + sigma * matrix(rnorm(n * S), nrow = n,ncol = S)
lm(YY[,1]~.,data=dat,weights = 1/sigmasq)
lm(YY[,2]~.,data=dat,weights = 1/sigmasq)
beta<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients,wlmi$coefficients)
}
beta<-apply(YY, 2,beta)
rowMeans(beta)
beta_diff<-function(y){
lmi<-lm(y~.,data = dat)
wlmi<-lm(y~.,data = dat,weights = 1/sigmasq)
c(lmi$coefficients-betaT,wlmi$coefficients-betaT)
}
beta_dif<-apply(YY, 2,beta_diff)
beta_dif_lm<-beta_dif[1:4,]
beta_dif_wlm<-beta_dif[5:8,]
rowMeans(beta_dif_lm^2)#beta mse
rowMeans(beta_dif_wlm^2)#beta mse
ants <- read.table("thatch_ant_c5del.txt", sep=’’),
ants <- read.table("thatch_ant_c5del.txt", sep=''),
header=TRUE)
ants <- read.table("thatch_ant_c5del.txt", sep='', header=TRUE)
str(ants)
head(ants)
tail(ants)
pairs(ants)
library(lattice)
splom(ants)
pairs(ants)
head(ants)
splom(ants)
lm(Headwidth~Colony+Distance,data = ants)
result<-lm(Headwidth~Colony+Distance,data = ants)
summary(result)
ants2<-ants
class(ants2$Colony)
?read.table
ants2<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses = c("factor","int","int","int","numeric"))
ants2<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses = c("factor","numeric","numeric","numeric","numeric"))
str(ants2)
str(ants)
tail(ants2)
tail(ants)
pairs(ants2)
result<-lm(Headwidth~Colony+Distance,data = ants2)
summary(result)
range(ants$Colony)
model.matrix(~Colony+Distance,data = ants2)
dim(model.matrix(~Colony+Distance,data = ants2))
(design<-model.matrix(~Colony+Distance,data = ants2))
design[1,]
colnames(design)
dim(design)
design[design[,11]==4,colnames(design)=="Colony4"]
design[,11]==4
design[design[,11]==4,colnames(design)=="Colony4"]
summary(result)
ants2$Headwidth
summary(result)
result$effects
s<-summary(result)
s$sigma
s$coefficients
s$coefficients
result$coefficients
s$coefficients
class(s$coefficients)
t<-s$coefficients[,1]/ s$coefficients[,2]
t
dim(design)
qt(1104-11)
qt(0.95,df=1104-11)
?rnorm
pt(t[1],df=1104-11)
t[1]
pt(t[3],df=1104-11)
t[3]
pt(-t[3],df=1104-11)
1-pt(-t[3],df=1104-11)
s$coefficients
dim(ants)
dim(design)
names(design)
colnames(design)
ants2$Colony
colnames(design)
length(level(ants2$Colony))
length(levels(ants2$Colony))
design<-model.matrix(~Colony+Distance,data = ants2)
design[1,]
design<-model.matrix(~1+Colony+Distance,data = ants2)
design[1,]
design[2,]
design[4,]
design[100,]
ants[100,]
design[500,]
ants[500,]
ants[1000,]
design[1000,]
design<-model.matrix(result)
design[1,]
class(ants2$Colony)
design<-model.matrix(~Colony,data = ants2)
design[1,]
ants2[1,]
ants2$Colony==10
design[1082,]
ants2$Colony==11
design[1099,]
design<-model.matrix(~Colony-1,data = ants2)
ants2[1,]
design[1,]
design<-model.matrix(~Colony+Distance-1,data = ants2)
design[1,]
design[1082,]
design<-cbind(1,design)
design[1,]
colnames(design)[1]<-"intercept"
dim(design)
design[design[,12]==4
,colnames(design)=="Colony4"]
design<-model.matrix(~Colony+Distance-1,data = ants2)
dim(design)
design[design[,11]==4
,colnames(design)=="Colony4"]
design[1,]
dim(design)
result<-lm(Headwidth~0+Colony+Distance,data = ants2)
summary(result)
result<-lm(Headwidth~Colony+Distance,data = ants2)
summary(result)
result<-lm(Headwidth~0+Colony+Distance,data = ants2)
summary(result)
s<-summary(result)
(t<-s$coefficients[,1]/s$coefficients[,2])#test statistics
pt(t[1],1104-11)
pt(t[1],1104-12)
s$coefficients
data.frame(t=s$coefficients[,3],p=s$coefficients[,4])
m1<-lm(lm(Headwidth~1+Colony+Distance,data = ants2))
m2<-lm(lm(Headwidth~1,data = ants2))
anova(m1,m2 )
dim(design)
m1<-lm(lm(Headwidth~1+Colony+Distance,data = ants2))
m2<-lm(lm(Headwidth~1+Colony,data = ants2))
anova(m1,m2 )
?lm
library(car)
install.packages(car)
install.packages("car")
m1<-lm(lm(Headwidth~Colony+Distance,data = ants2))
m2<-lm(lm(Headwidth~Colony,data = ants2))
anova(m1,m2 )
anova(m1,m2 )
ants <- read.table("thatch_ant_c5del.txt", sep='', header=TRUE)
pairs(ants)
library(lattice)
splom(ants)
ants2<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses = c("factor","numeric","numeric","numeric","numeric"))
result<-lm(Headwidth~0+Colony+Distance,data = ants2)
summary(result)
design<-model.matrix(~Colony+Distance-1,data = ants2)
dim(design)
design[design[,11]==4
,colnames(design)=="Colony4"]
m1<-lm(lm(Headwidth~1+Colony+Distance,data = ants2))
m2<-lm(lm(Headwidth~1,data = ants2))
anova(m1,m2 )
m1<-lm(lm(Headwidth~Colony+Distance,data = ants2))
m2<-lm(lm(Headwidth~Colony,data = ants2))
anova(m1,m2 )
m1
m1
m1$coefficients
m1<-lm(lm(Headwidth~Colony+Distance-1,data = ants2))
m1$coefficients
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-(m(Headwidth~Colony-1,data = ants2)
anova(m1,m2 )
m2<-(m(Headwidth~Colony-1,data = ants2)
m2<-(Headwidth~Colony-1,data = ants2)
anova(m1,m2)
m1
m2
m2<-(Headwidth~Colony-1 , data = ants2)
m2<-(Headwidth~Colony-1,data = ants2)
m2<-lm(Headwidth~Colony-1,data = ants2)
m2
anova(m1,m2)
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-lm(Headwidth~1,data = ants2)
anova(m1,m2)
m1
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m1<-aov(Headwidth~Colony+Distance-1,data = ants2)
m1
model.tables(m1,type = "means")
model.tables(m1)
lm(Headwidth~Colony-1,data = ants2)
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m1$coefficients
hm<-rbind(c(0,1,0,0,0,0,0,0,-1,0,0)
,c(1,-2,0,0,0,0,0,0,0,0,0)
,c(0,-2,1,0,0,0,0,0,0,0,0)
,c(0,-2,0,1,0,0,0,0,0,0,0)
,c(0,-2,0,0,1,0,0,0,0,0,0)
,c(0,-2,0,0,0,1,0,0,0,0,0)
,c(0,-2,0,0,0,0,1,0,0,0,0)
,c(0,-2,0,0,0,0,0,1,0,0,0)
,c(0,-2,0,0,0,0,0,0,0,1,0))
rhs <- c(0)
rhs <- rep(0,9)
library(car)
install.packages("car")
library(car)
library(lme4)
install.packages("lme4")
