plot(model,ask=FALSE)
plot(model,ask=FALSE)
par(mfrow=c(2,2))
plot(model,ask=FALSE)
par(mfrow=1)
par(mfrow=c(1,1))
plot(model$residuals)
abline(h=mean(model$residuals))
par(mfrow=c(2,2))
plot(model,ask=FALSE)
par(mfrow=c(1,1))
plot(model$residuals)
abline(h=mean(model$residuals))#E(e)=0
install.packages()
install.packages("cars")
install.packages("car")
library(car)
installed.packages("lme4")
install.packages("lme4")
library(car)
library(car)
?av.plot
avPlot(model)
?avPlot
model
avPlot(model,"Moisture_Content")
avPlot(model,"Sweetness")
m1<-lm(Sweetness~Moisture_Content,data=br)
m2<-lm(Brand_Liking~Moisture_Content,data = br)
plot(m1$residuals,m2$residuals)
?avPlot
avPlot(model,~Sweetness)
avPlot(model, ~ Sweetness)
m1 <- lm(partic ~ tfr + menwage + womwage + debt + parttime, Bfox)
avPlots(m1, ~ womwage)
avPlots(m1, "womwage")
avPlot(model,"Moisture_Content")
avPlot(model,"Moisture_Content")
avPlot(model,"Moisture_Content")
avPlot(model,"Sweetness")
model
layout(matrix(1:2,ncol=2))
plot(model,which=c(2,3))
inter_sr<- rstandard(model)
qqnorm(inter_sr,ylab = "standardized residuals")
which(abs(inter_sr)>2)
inter_sr
ext_sr<- rstudent(model)
which(abs(ext_sr)>2)
ext_sr
layout(matrix(1:2,ncol=2))
plot(model,which=c(2,3))
layout(matrix(1:2,ncol=2))
plot(model,which=c(2,3))
ext_sr<- rstudent(model)
which(abs(ext_sr)>2)
plot(model$xlevels)
model$xlevels
dim(br)
pt(abs(ext_sr))
pt(abs(ext_sr),df = 16-3-1)
1-pt(abs(ext_sr),df = 16-3-1)
(1-pt(abs(ext_sr),df = 16-3-1))<0.1/2
x<-model.matrix(model)
hat(x)
hat(x)
lev<-hat(x)
plot(lev,ylab = "leverage points")
abline(h=(2*3)/16)
x<-model.matrix(model)
lev<-hat(x)
plot(lev,ylab = "leverage points")
6/16
plot(lev,ylim = c(0,0.5),ylab = "leverage points")
abline(h=(2*3)/16)
plot(lev,ylim = c(0.1,0.5),ylab = "leverage points")
abline(h=(2*3)/16)
par(mfrow=c(1))
par(mfrow=c(1,1))
x<-model.matrix(model)
lev<-hat(x)
plot(lev,ylim = c(0.1,0.5),ylab = "leverage points")
abline(h=(2*3)/16)
hat(x)
x%*%(t(x)%*%x)^-1%*%t(x)
diag(x%*%(t(x)%*%x)^-1%*%t(x))
hat(x)
diag(x%*%solve(t(x)%*%x)%*%t(x))
hat(x)
diag(model$residuals)
e<-diag(model$residuals)
h<-diag(1/(1-hat(x)))
H<-x%*%solve(t(x)%*%x)%*%t(x)
h%*%e%*%H
((h%*%e%*%H)^2)/(3*var(br$Brand_Liking))
apply(((h%*%e%*%H)^2)/(3*var(br$Brand_Liking)),1,sum)
(cooks<-apply(((h%*%e%*%H)^2)/(3*var(br$Brand_Liking)),1,sum))
plot(cooks)
cooks.distance(model)
tail(cooks)
?cooks.distance
plot(cooks.distance(model))
plot(cooks.distance(model))
plot(cooks)
plot(cooks.distance(model))
par(mfrow=c(2,1))
plot(cooks)
plot(cooks.distance(model))
plot(cooks,main = "by matrix algebra")
plot(cooks.distance(model),main = "by built-in function")
getwd()
str(hayfever <- within(read.table("hayfever.txt", sep=""), header = TRUE),
{
A <- factor(A)
B <- factor(B)
id <- factor(id)
})
str(hayfever <- within(read.table("hayfever.txt", sep="", header = TRUE),
{
A <- factor(A)
B <- factor(B)
id <- factor(id)
}))
model1<-aov(hours~A+B+A*B)
model1<-aov(hours~A+B+A*B,data = hayfever)
model.tables(model1,type = "means")
model1<-aov(hours~A+B+A*B-1,data = hayfever)
model.tables(model1,type = "means")
model1<-aov(hours~A+B+A*B,data = hayfever)
?aov
model1<-aov(hours~A*B,data = hayfever)
model.tables(model1,type = "means")
3.761+3.877+1.245+2.164+1.809+4.019
3.761+3.877+1.245+2.164+1.809+4.019
160875/4
3.761+3.877+1.245+2.164+1.809+4.019
16.875/4
16.875/6
lmhours~A*B,data = hayfever()
lm(hours~A*B,data = hayfever)
lm(hours~A*B-1,data = hayfever)
lm(hours~A*B,data = hayfever)
lm(hours~1+A*B,data = hayfever)
model1<-aov(hours~A*B,data = hayfever)
model.tables(model1,type = "means")
7.833+8.983+9.125
range(hours)
range(hayfever$hours)
model.tables(model1)
2.8124+0.9482
model.tables(model1)
model.tables(model1,type = "means")
7.1833+0.65+1.8-0.5083
model1$residuals
dim(hayfever)
qqplot(model1$residuals)
qqnorm(model1$residuals)
qqnorm(model1$residuals)
n=dim(hayfever[1])
sresid<-sort(model1$residuals)
qqline(qnorm(c(1:n)/n),sresid)
n
dim(hayfever)
n=dim(hayfever)[1]
sresid<-sort(model1$residuals)
qqline(qnorm(c(1:n)/n),sresid)
n
qqnorm(model1$residuals)
n=dim(hayfever)[1]
sresid<-sort(model1$residuals)
qqline(qnorm(c(1:n)/n),sresid)
sresid
qqline(model1$residuals)
qqnorm(model1$residuals)
qqline(model1$residuals)
levels(hayfever$A)
DataURL <- "http://www.stat.wisc.edu/~st849-1/data/"
str(ql <- read.table(paste(DataURL, "hmw3q1_data.txt", sep=""), header=TRUE))
```
model.tables(model1)
model.tables(model1,type = "means")
(means<-model.tables(model1,type = "means"))
(effect<-model.tables(model1))
levels(hayfever$A)
means$tables
means$tables$`A:B`
colMeans(means$tables$`A:B`)
x<-1:3
y<-colMeans(means$tables$`A:B`)
plot(x,y)
plot(x,y,pch=1:3)
x<-c("1","2","3")
y<-colMeans(means$tables$`A:B`)
plot(x,y,pch=1:3)
x<-1:3
y<-colMeans(means$tables$`A:B`)
plot(x,y,pch=1:3)
plot(x,y,pch=1:3,axes = F)
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"), srt = 45, pos = 1, xpd = TRUE)
```
plot(x,y,pch=1:3,axes = F)
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = y)
plot(x,y,pch=1:3,axes = F,ylim = c(4,10))
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = y)
plot(x,y,pch=1:3,axes = F,ylim = c(4,15))
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = y)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
range(y)
plot(x,y,pch=1:3,axes = F,ylim = c(4,9))
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = y)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = y)
text(x = y, par("usr")[3] - 0.2, labels = round(y),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = round(y))
plot(x,y,pch=1:3,axes = F,ylim = c(4,9))
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = round(y))
axis(2, at=y, labels = round(y,2))
plot(x,y,pch=1:3,axes = F,ylim = c(4,9))
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = round(y,2))
plot(x,y,pch=1:3,axes = F,ylim = c(4,9),cex=1.2)
axis(1, at=seq(1, 3, by=1), labels = FALSE)
text(x = seq(1, 3, by=1), par("usr")[3] - 0.2, labels = c("1","2","3"),  pos = 1, xpd = TRUE)
axis(2, at=y, labels = round(y,2))
x<-1:3
y<-(means$tables$`A:B`)
plot(x,y,pch=1:3,axes = F,ylim = c(4,9),cex=1.2)
y
as.vector(y)
y<-as.vector(means$tables$`A:B`)
plot(x,y,pch=1:3,axes = F,ylim = c(4,9),cex=1.2)
x<-rep(1:3,3)
x、
x
x<-rep(1:3,3)
y<-as.vector(means$tables$`A:B`)
plot(x,y,pch=1:3,axes = F,ylim = c(4,9),cex=1.2)
plot(x,y,pch=1:3,ylim = c(4,9),cex=1.2)
y<-as.vector(means$tables$`A:B`)
plot(x,y,pch=1:3,cex=1.2)
plot(x,y,pch=1:3,cex=1.2,xlab = "A",ylab = "B")
summary(model1)
model1<-aov(hours~A:B,data = hayfever)
model2<-aov(hours~A:B,data = hayfever)
summary(model2)
model1<-aov(hours~A*B,data = hayfever)
anova(model1,model2)
summary(model1)
model2<-aov(hours~A+A:B,data = hayfever)
anova(model1,model2)
model2<-aov(hours~A+B,data = hayfever)
anova(model1,model2)
summary(model1)
DataURL <- "http://www.stat.wisc.edu/~st849-1/data/"
str(ql <- read.table(paste(DataURL, "hmw3q1_data.txt", sep=""), header=TRUE))
plot(ql)
lm1<-lm(VL~GSS,data = ql)
outlier.test(m1)
library(car)
?outlierTest
outlier.test(m1)
plot(ql)
outlier.test(m1)
outlierTest(m1)
lm1
outlierTest(m1)
lm1<-lm(VL~GSS,data = ql)
outlierTest(m1)
outlierTest(lm(VL~GSS,data = ql))
outlierTest(lm(VL~GSS,data = ql))
outlierTest(lm(VL~GSS,data = ql))
plot(ql[-28])
plot(ql[-28,])
outlierTest(lm(VL~GSS,data = ql[-28,]))
plot(ql[-c(16,28),])
outlierTest(lm(VL~GSS,data = ql[-c(16,28),]))
outlierTest(lm(VL~GSS,data = ql[-c(6,16,28),]))
outlierTest(lm(VL~GSS,data = ql[-c(6,16,28,44),]))
model<-lm((VL~GSS,data = ql[-c(6,16,28),])
model<-lm(VL~GSS,data = ql[-c(6,16,28),])
summary(model)
plot(model,ask = FALSE)
par(mfrow=c(2,2))
plot(model,ask = FALSE)
?boxCox
boxCox(VL~GSS,data=ql,lambda = seq(-2, 2, 1/10) )
b<-boxCox(VL~GSS,data=ql,lambda = seq(-2, 2, 1/10) )
lambda<- b$x[which.max(b$y)]
lambda
ql$y<-(ql$VL^lambda-1)/lambda
model2<-lm(y~GSS,data = ql)
summary(model2)
plot(model2,ask = FALSE)
par(mfrow=c(2,2))
plot(model2,ask = FALSE)
library(reshape2)
library(dplyr)
library(ggplot2)
ants3<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses=c("factor","factor","numeric","numeric","numeric"))
av1<-aov(Headwidth~Colony*Distance,data = ants3)#two factors
result<-model.tables(av1,type = "means")
interact<-result$tables$`Colony:Distance`
interact<-interact[c(3,10,7,5,8,9,2,6,4,1),]
inter<-matrix(as.vector(interact),nrow=10)
colnames(inter)<-colnames(interact);rownames(inter)<-rownames(interact)
inter<- as.data.frame(t(inter))
inter$distance<-rownames(inter)
inter<-melt(inter)
inter<-rename(inter,colony=variable,headwidth.mean=value)
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
lines(interact[,1][c(1,4,6,2,9,8,5,7,10,3)]
,y=rownames(interact)[c(1,4,6,2,9,8,5,7,10,3)])
```
>reproduce the plot of the problem.
linear.hypothesis(m1,hm,rhs)
ants <- read.table("thatch_ant_c5del.txt", sep='', header=TRUE)
pairs(ants)
library(lattice)
ants2<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses = c("factor","numeric","numeric","numeric","numeric"))
#should take colony number as factor
str(ants2)
result<-lm(Headwidth~0+Colony+Distance,data = ants2)
summary(result)
design<-model.matrix(~Colony+Distance-1,data = ants2)
dim(design)
design[design[,11]==4
,colnames(design)=="Colony4"]
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-lm(Headwidth~1,data = ants2)
anova(m1,m2)
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-lm(Headwidth~Colony-1,data = ants2)
anova(m1,m2)
dim(design)
head(design)
library(car)
library(lme4)
library(lme4)
library(car)
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m1$coefficients
rhs <- rep(0,9)
hm<-rbind(c(0,1,0,0,0,0,0,0,-1,0,0)
,c(1,-2,0,0,0,0,0,0,0,0,0)
,c(0,-2,1,0,0,0,0,0,0,0,0)
,c(0,-2,0,1,0,0,0,0,0,0,0)
,c(0,-2,0,0,1,0,0,0,0,0,0)
,c(0,-2,0,0,0,1,0,0,0,0,0)
,c(0,-2,0,0,0,0,1,0,0,0,0)
,c(0,-2,0,0,0,0,0,1,0,0,0)
,c(0,-2,0,0,0,0,0,0,0,1,0))
linear.hypothesis(m1,hm,rhs)
linearHypothesis(m1,hm,rhs)
plot(ants2$Headwidth,ants2$Mass)
m1_e<-lm(Headwidth~Colony+Distance+Mass-1,data = ants2)
summary(m1_e)
```
### e
```{r}
library(reshape2)
library(dplyr)
library(ggplot2)
ants3<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses=c("factor","factor","numeric","numeric","numeric"))
av1<-aov(Headwidth~Colony*Distance,data = ants3)#two factors
result<-model.tables(av1,type = "means")
interact<-result$tables$`Colony:Distance`
interact<-interact[c(3,10,7,5,8,9,2,6,4,1),]
inter<-matrix(as.vector(interact),nrow=10)
colnames(inter)<-colnames(interact);rownames(inter)<-rownames(interact)
inter<- as.data.frame(t(inter))
inter$distance<-rownames(inter)
inter<-melt(inter)
inter<-rename(inter,colony=variable,headwidth.mean=value)
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
lines(interact[,1][c(1,4,6,2,9,8,5,7,10,3)]
,y=rownames(interact)[c(1,4,6,2,9,8,5,7,10,3)])
```
>reproduce the plot of the problem.
```{r}
m1<-aov(Headwidth~Colony*Distance,data = ants3)
m2<-aov(Headwidth~1,data = ants3)
anova(m1,m2)
```
>H0:the effect of colony and distance is not significant.
>result: reject the nul hypothesis, so the data supports the general observation from this plot.
>Another way to use variable distance: we can treat as not a factor but a normal variable into the model.
### f
```{r}
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)#one factors
result<-summary(m1)
interact<-result$coefficients[-11,1]
interact<-interact[c(3,10,7,5,8,9,2,6,4,1)]
inter<- as.data.frame((interact))
inter$colony<-rownames(inter)
colnames(inter)[1]<-"headwidth.mean"
inter<-arrange(inter,headwidth.mean)
plot(inter$headwidth.mean,axes = F,xlab="colony",ylab="headwidth")
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
lines(interact[,1][c(1,4,6,2,9,8,5,7,10,3)]
,y=rownames(interact)[c(1,4,6,2,9,8,5,7,10,3)])
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
library(reshape2)
library(dplyr)
library(ggplot2)
ants3<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses=c("factor","factor","numeric","numeric","numeric"))
av1<-aov(Headwidth~Colony*Distance,data = ants3)#two factors
result<-model.tables(av1,type = "means")
interact<-result$tables$`Colony:Distance`
interact<-interact[c(3,10,7,5,8,9,2,6,4,1),]
inter<-matrix(as.vector(interact),nrow=10)
colnames(inter)<-colnames(interact);rownames(inter)<-rownames(interact)
inter<- as.data.frame(t(inter))
inter$distance<-rownames(inter)
inter<-melt(inter)
inter<-rename(inter,colony=variable,headwidth.mean=value)
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
lines(interact[,1][c(1,4,6,2,9,8,5,7,10,3)]
,y=rownames(interact)[c(1,4,6,2,9,8,5,7,10,3)])
plot.new()
?plot.new
plot.new()
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
lines(interact[,1][c(1,4,6,2,9,8,5,7,10,3)]
,y=rownames(interact)[c(1,4,6,2,9,8,5,7,10,3)])
ants2<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses = c("factor","numeric","numeric","numeric","numeric"))
#should take colony number as factor
str(ants2)
result<-lm(Headwidth~0+Colony+Distance,data = ants2)
summary(result)
```
```{r}
design<-model.matrix(~Colony+Distance-1,data = ants2)
dim(design)
design[design[,11]==4
,colnames(design)=="Colony4"]
```
> the coefficients of the each colony means the average headwidth in that colony at distance 0. And the coefficient of distance means that the average headwidth will grow 0.167 per meter.
```{r}
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-lm(Headwidth~1,data = ants2)
anova(m1,m2)
```
>H0: beta1.=beta2=0
>test statistic= $F=\frac{(RSS2-RSS1)/11}{RSS1/(1104-11)}=5.47646$. it's distribution is F(11,1093), the result is to reject the Null hypothesis which means headwidth is related to colony and distance.
```{r}
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m2<-lm(Headwidth~Colony-1,data = ants2)
anova(m1,m2)
```
>H0: beta2=0
>test statistic= $F=\frac{(RSS2-RSS1)/1}{RSS1/(1104-11)}=18.83143$. it's distribution is F(1,1093), the result is to reject the Null hypothesis which means headwidth is related to distance.
### c
```{r,eval=FALSE}
library(lme4)
library(car)
m1<-lm(Headwidth~Colony+Distance-1,data = ants2)
m1$coefficients
rhs <- rep(0,9)
hm<-rbind(c(0,1,0,0,0,0,0,0,-1,0,0)
,c(1,-2,0,0,0,0,0,0,0,0,0)
,c(0,-2,1,0,0,0,0,0,0,0,0)
,c(0,-2,0,1,0,0,0,0,0,0,0)
,c(0,-2,0,0,1,0,0,0,0,0,0)
,c(0,-2,0,0,0,1,0,0,0,0,0)
,c(0,-2,0,0,0,0,1,0,0,0,0)
,c(0,-2,0,0,0,0,0,1,0,0,0)
,c(0,-2,0,0,0,0,0,0,0,1,0))
linearHypothesis(m1,hm,rhs)
```
>we should reject null hypothesis.
### d
```{r}
plot(ants2$Headwidth,ants2$Mass)
m1_e<-lm(Headwidth~Colony+Distance+Mass-1,data = ants2)
summary(m1_e)
```
### e
```{r}
library(reshape2)
library(dplyr)
library(ggplot2)
ants3<-read.table("thatch_ant_c5del.txt", sep='', header=TRUE,
colClasses=c("factor","factor","numeric","numeric","numeric"))
av1<-aov(Headwidth~Colony*Distance,data = ants3)#two factors
result<-model.tables(av1,type = "means")
interact<-result$tables$`Colony:Distance`
interact<-interact[c(3,10,7,5,8,9,2,6,4,1),]
inter<-matrix(as.vector(interact),nrow=10)
colnames(inter)<-colnames(interact);rownames(inter)<-rownames(interact)
inter<- as.data.frame(t(inter))
inter$distance<-rownames(inter)
inter<-melt(inter)
inter<-rename(inter,colony=variable,headwidth.mean=value)
plot.new()
ggplot(inter,aes(x =headwidth.mean,y=colony,group=distance)) + geom_path(aes(lty=distance))
