library(png)
vg <- readPNG("Van_Gogh.png")
vg
str(vg)
dim(vg)
red.vg <- vg[,,1]
green.vg <- vg[,,2]
blue.vg <- vg[,,3]
class(blue.vg)
nrow(matrix(1:10,nrow = 3))
nrow(matrix(1:10,nrow = 2))
(matrix(1:10,nrow = 2))
row(matrix(1:10,nrow = 2))
mfilter<-function(mat,k){
if(!is.matrix(mat)){
return("bad data")
}else{
mf<-outer(1:nrow(mat),1:ncol(mat),FUN = function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2]))
return(mf)
}
}
m<- matrix(1:10,nrow = 5)
mfilter(m,1)
mat<- matrix(1:10,nrow = 5)
outer(1:nrow(mat),1:ncol(mat),FUN = function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2]))
outer(1:nrow(mat),1:ncol(mat),FUN = function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*1^2]))
outer(1:nrow(mat),1:ncol(mat),FUN = function(x,y) x)
mat
outer(1:nrow(mat),1:ncol(mat),FUN = function(x,y) sum(row(mat)-x))
row(mat)
row(mat)-1
sum(row(mat)-1)
mapply(function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2])), row(mat), col(mat)
mapply(function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2]), row(mat), col(mat)
```
mapply(function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2]), row(mat), col(mat))
mapply(function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*1^2]), row(mat), col(mat))
?mapply
a<-mapply(function(x,y) mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*1^2]), row(mat), col(mat))
matrix(a,dim(mat))
mfilter<-function(mat,k){
if(!is.matrix(mat)){
return("bad data")
}else{
mf<-mapply(function(x,y)mean(mat[(row(mat)-x)^2+(col(mat)-y)^2<=2*k^2]), row(mat), col(mat))
mf<-matrix(mf,dim(mat))
return(mf)
}
}
mat<- matrix(1:10,nrow = 5)
mfilter(m,1)
z<-function(x,y){
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
}
z<-function(x,y){
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
k=120
z<-function(x,y){
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
z<-function(x,y){
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)*sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
}
library(persp3d)
install.packages("persp3d")
library(rgl)
?persp3d
persp3d(x=seq(-k,k,by = 0.1),y=seq(-k,k,by = 0.1),z=z)
persp3d(x=seq(-k,k,by = 0.1),y=seq(-k,k,by = 0.1),z=z)
persp3d(x=seq(-k,k,by = 0.1),y=seq(-k,k,by = 0.1),z=z(seq(-k,k,by = 0.1),seq(-k,k,by = 0.1)))
persp3d(x=x,y=y,z= outer(x,y,z) )
x=seq(-k,k,by = 0.1);y=seq(-k,k,by = 0.1)
persp3d(x=x,y=y,z= outer(x,y,z) )
persp3d(z,xlim = c(-k,k),ylim = c(-k,k))
?optim
persp3d(z,xlim = c(-k,k),ylim = c(-k,k))
initials=c(0,0)
optim(initials,fn = z,method ="Nelder-Mead")
initials=c(0,0)
optim(initials,fn = z,method ="Nelder-Mead")
optim(par = initials,fn = z,method ="Nelder-Mead")
z<-function(x,y){
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)*sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
}
k=120
optim(par = initials,fn = z,method ="Nelder-Mead")
optim(par =c(1,1),fn = z,method ="Nelder-Mead")
z<-function(b){
x<-b[1]
y<-b[2]
(1-x/k)*(1+x/k)*(1-y/k)*(1+y/k)*(-(y+47)*sin(sqrt(abs(y+x/2+47)))-x*sin(sqrt(abs(x-(y+47)))))
}
initials=c(0,0)
optim(par =c(1,1),fn = z,method ="Nelder-Mead")
persp3d(z,xlim = c(-k,k),ylim = c(-k,k))
